name: Compile and Publish .NET Release

# Trigger the workflow only when a push is made to main with a version tag (format: v*.*.*)
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository code
    - name: Checkout code
      uses: actions/checkout@v3

    # Setup .NET SDK
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 7.0.x

    # Build the .NET app
    - name: Build .NET App
      run: dotnet publish -c Release -r win-x64 -f net7.0
    # src/DeribitSolution

    # Create a compressed release of the application
 
    - name: Compress Release
      run: zip -jr ServiceClient.zip /home/runner/work/DeribitServiceClient/DeribitServiceClient/src/DeribitSolution/bin/Release/net7.0/win-x64/publish/

    # Get the version tag for the release
    - name: Get tag version
      id: version
      uses: battila7/get-version-action@v2

    # Upload the release to GitHub
    - name: Upload Release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.RELEASE }} # The token for accessing the repository
        file: /home/runner/work/DeribitServiceClient/DeribitServiceClient/ServiceClient.zip # The path to the compressed release file
        asset_name:  Consoleapp-${{ steps.version.outputs.version-without-v }}.zip # The name of the compressed release file
        tag: ${{ steps.version.outputs.version-without-v }} # The version tag for the release
        overwrite: true # Overwrite the release if it already exists
        body: "Current Release of the DERIBIT Service Client" # The body of the release
